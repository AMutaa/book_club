{"version":3,"sources":["Utilities/elevation.js","Utilities/colors.js","Elements/Icon.jsx","Elements/Card.jsx","Utilities/position.js","Elements/Button.jsx","Components/ImportModal.jsx","Components/Counter.jsx","Components/Form.jsx","App.jsx","serviceWorker.js","index.js"],"names":["elevation","colors","Icon","this","props","name","react_default","a","createElement","x","y","width","height","viewBox","enableBackground","fill","color","points","Component","defaultProps","Card","styled","div","_templateObject","type","_ref","size","BUTTON_MODIFIERS","import","concat","lighten","cancel","large","signin","icon","_ref$y","_ref$x","absolute","normal","Button","button","Button_templateObject","applyStyleModifiers","ImportModal","Header","style","backgroundColor","modifiers","Icon_Icon","Content","Footer","ImportModal_templateObject","_templateObject2","_templateObject3","Counter","state","count","handleUpcount","console","log","_this","setState","handleDowncount","onClick","Form","action","Input","required","marginTop","input","Form_templateObject","App","alert","AppWrapper","CardWrapper","ImportModal_ImportModal","Form_Form","Counter_Counter","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.904eac3e.chunk.js","sourcesContent":["// variables\n\nexport default [\n  'box-shadow: inset 0 7px 9px -7px rgba(0,0,0,0.7);',\n  'box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);',\n  'box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);',\n  'box-shadow: 0 10px 20px rgba(0,0,0,0.10), 0 6px 6px rgba(0,0,0,0.10);',\n  'box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);',\n  'box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n]","//variables\n\nexport const lightGrey = '#f2f2f2';\nexport const grey = '#d8d8d8';\nexport const black = '#222';\nexport const teal = '#82d8d8';\nexport const purp = '#524763';\nexport const red = '#ff3333';\nexport const blue = '#0747a6';\nexport const darkGrey = '#606468';\nexport const darkGrey2 = '#3b4148';\nexport const pink = '#ea4c88';\nexport const green = '#33ff74';\nexport const white = '#ffffff';\n\n\n\nexport default { lightGrey, grey, black, teal, purp, red, blue, darkGrey, darkGrey2, pink, green, white }","import React, { Component } from 'react'\n\nexport default class Icon extends Component {\n  static defaultProps = {\n    color: 'black'\n  }\n\n  render() {\n    // eslint-disable-next-line\n    switch (this.props.name) {\n      case 'close':\n        return (\n          <svg\n            x=\"0\"\n            y=\"0\"\n            width=\"15px\"\n            height=\"15px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n          >\n            <polygon\n              fill={this.props.color}\n              points=\"31.11,1.41 29.7,0 15.56,14.14 1.41,0 0,1.41 14.14,15.56 0,29.7 1.41,31.11 15.56,16.97   29.7,31.11 31.11,29.7 16.97,15.56 \"\n            />\n          </svg>\n        )\n    }\n  }\n}\n","\nimport styled from 'styled-components';\nimport { elevation, colors, display } from 'Utilities'\n\n\n// Card Component and defining styles for passing props\n\nexport const Card = styled.div`\n${display}\nflex-direction:column;\nbackground: ${props => props.type === 'signin' ? '#3b4148' : colors.white};\nborder-radius: 5px;\npadding-bottom: 15px;\nheight: 100%;\nmargin: 0 auto;\ncolor: ${ colors.black};\n\n\n${\n  ({ size }) => {\n    if (size === 'large') {\n      return `\n       width: 60%;\n       grid-column:1/-1\n       height:70%;\n       padding-bottom: 0;\n       `\n    } else {\n      return `\n      width: 60%\n      `\n    }\n  }\n  }\n\n\n${ elevation[2]}\n&: hover{\n  ${ elevation[5]}\n}\n\n& Icon{\n  border: 2px solid red;\n\n}\n\n`","\n\n// mixins\n\nexport const absolute = ({ y = 'top', x = 'left' }) => `\nposition:absolute;\n${y}:0;\n${x}:0;\n`;\n\nexport const display = `\ndisplay: flex;\njustify-content: center;\n\n`","import styled from 'styled-components';\nimport { applyStyleModifiers } from 'styled-components-modifiers';\nimport { lighten } from 'polished';\nimport { colors, absolute } from 'Utilities';\n\n\nconst BUTTON_MODIFIERS = {\n\n  import: () => `\n   background: ${colors.green}\n    height:2.5rem;\n    color: white;\n    font-size:1rem;\n    margin: 10px auto;\n    width: 30%;\n    &:hover{\n      background: ${lighten(0.1, '#00ff00')}\n      }\n    `,\n\n  cancel: () => `\n    background: white;\n    color: black;\n    border: 1px solid grey;\n    &: hover {\n      background: ${colors.red}\n      color: ${colors.white};\n      border: none;\n    }\n    `,\n\n  large: () => `\n    width: 40%;\n    color:${colors.white};\n    background: ${colors.blue}\n    &:hover{\n      background: ${lighten(0.1, '#095edc')}\n      }\n\n    `,\n\n  signin: () => `\n    width: 90%;\n    margin-top: 40px;\n    height: 2.5rem;\n    font-size:1rem;\n    background: ${colors.pink}\n    color: white;\n    &:hover{\n      background: ${lighten(0.1, '#a11249')}\n      }\n\n    `,\n\n  icon: () => `\n    background: transparent\n    margin: 0 2px;\n    ${absolute({ y: 'top', x: 'right' })};\n     background:transparent;\n    `,\n  normal: () => `\n   background: #00cc41\n   color:${colors.white};\n   align-items: flex-end;\n   &:hover{\n    background: ${lighten(0.1, '#00cc00')}\n    }\n\n\n  `\n\n\n}\n\n\n// passing props & variables with an extendible system\nexport const Button = styled.button`\n  border-radius:3px;\n  font-family: 'Source Sans Pro', sans-serif;\n  height:30px;\n  color:${colors.black};\n  outline:none;\n  font-size:0.8rem;\n  letter-spacing: 0.03rem;\n  border: none;\n  margin: auto 10px;\n  padding: 0 10px;\n  &:hover{\n    background: ${lighten(0.2, '#f2f2f2')}\n    }\n\n${applyStyleModifiers(BUTTON_MODIFIERS)};\n  `;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Card, Icon, Button } from 'Elements';\nimport { colors } from 'Utilities';\n\n\n\nexport default class ImportModal extends Component {\n  render() {\n    return (\n      <Card size='large'>\n        <Header style={{ backgroundColor: 'white', color: 'black' }} type='large'>\n          <h2>Import your existing contacts</h2>\n          <Button modifiers='icon'><Icon name='close' /></Button>\n        </Header>\n        <Content type='large' style={{ backgroundColor: '#e6ffee' }}>\n          <h4>Have existing contacts in a file ? Import a .CSV file of your contacts</h4>\n          <Button modifiers='import'>Import from file</Button>\n        </Content>\n        <Footer type='large'>\n          <Button modifiers='cancel'>Cancel</Button>\n          <Button modifiers='normal'>Next</Button>\n\n        </Footer>\n      </Card>\n\n    )\n  }\n}\n\n\nexport const Header = styled.div`\n  position:relative;\n  display: flex;\n  height: ${props => props.type === 'large' ? '30%' : '20%'};\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.white};\n  border-radius: 5px 5px 0 0;\n  background: ${props => props.type === 'signin' ? '#606468' : '#0747a6'};\n  h3{\n   margin: 0;\n  }\n  h1{\n font-size: 2rem;\n   }\n  `\n\n\nexport const Content = styled.div`\nheight: ${props => props.type === 'large' ? '60%' : '70%'};\ndisplay:flex;\njustify-content: center;\nalign-content: center;\nflex-direction:column;\n  span{\n   font-size: 7rem;\n   border-radius: 5px 5px 0 0;\n   display:flex;\n   justify-content: center;\n   align-items: center;\n }\n\n`\nexport const Footer = styled.div`\n height: ${props => props.type === 'large' ? '20%' : '10%'};\n justify-content:  ${props => props.type === 'large' ? 'space-between' : 'center'};\n display: flex;\n border-radius: 5px 5px 0 0;\n `;\n\n","import React, { Component } from 'react';\nimport { Card, Button } from 'Elements'\nimport { Header, Content, Footer } from 'Components'\n\n\nexport default class Counter extends Component {\n  state = {\n    count: 0,\n  };\n\n  handleUpcount = () => {\n    console.log(this.state.count + 1);\n    this.setState({\n      count: this.state.count + 1,\n\n    });\n  };\n\n  handleDowncount = () => {\n    console.log(this.state.count - 1);\n    this.setState({\n      count: this.state.count - 1,\n    });\n  }\n\n\n  render() {\n    return (\n      <Card>\n        <Header><h1>CLAPS</h1></Header>\n        <Content>\n          <span>{this.state.count}</span>\n        </Content>\n        <Footer>\n          <Button modifiers={['large', 'cancel']} onClick={this.handleDowncount} >-</Button>\n          <Button modifiers='large' onClick={this.handleUpcount}>+</Button>\n        </Footer>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { Header, Content, Footer } from 'Components'\nimport { Card, Button } from 'Elements'\nimport { colors } from 'Utilities';\n\nexport default class Form extends Component {\n  render() {\n    return (\n      <Card type='signin'>\n        <Header type='signin'>\n          <h1>SIGN IN</h1>\n        </Header>\n        <Content>\n          <form action=\"\">\n            <p>Username</p>\n            <Input type='text' name='firstname' required />\n            <div style={{ marginTop: '20px' }}></div>\n            <p>Password</p>\n            <Input type='text' name='lastname' required />\n            <Footer><Button modifiers='signin' type='submit'>SIGN IN</Button></Footer>\n          </form>\n        </Content>\n        <Footer>\n          <h5><span>Not a member ?</span> Sign Up Now </h5>\n        </Footer>\n      </Card >\n    )\n  }\n}\nconst Input = styled.input`\nheight: 2.5rem;\nwidth: 90%;\ncolor: ${colors.white};\npadding-left: 5px;\noutline: none;\nfont-size: 1rem;\nborder: none;\nborder-radius: 4px;\nbackground: ${colors.darkGrey}\n\n`\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css'\nimport { colors } from 'Utilities'\nimport { Form, DeleteModal, Counter } from 'Components';\n\n\nexport default class App extends Component {\n  componentDidMount() {\n    alert(\n      '🛑 Colors and Designs in this project are chosen for demonstrative purposes only 🛑'\n    )\n  }\n\n  render() {\n    return (\n      <AppWrapper>\n        <h1 style={{ color: 'brown' }}>STYLED COMPONENTS</h1>\n        <CardWrapper>\n          <DeleteModal />\n          <Form />\n          <Counter />\n        </CardWrapper>\n      </AppWrapper>\n    )\n  }\n}\n\n\n// first styled component and nesting styles\n\nconst AppWrapper = styled.div`\nwidth: 70vw;\nmargin:0 auto;\nheight: 90vh;\nborder-radius:4px;\nbackground: ${colors.lightGrey}\nh1{\nfont-size: 1.5rem;\nletter-spacing:0.2rem;\n\n}\n`;\n\n// referencing other components\n\nconst CardWrapper = styled(AppWrapper)`\npadding: 10px 0;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\ngrid-template-rows: 1.5fr 2fr;\ngrid-gap:10px;\nheight: 100%;\n\n`\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}